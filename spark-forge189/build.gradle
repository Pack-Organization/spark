buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://maven.minecraftforge.net" }
    }
    dependencies {
        classpath ('net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT')
    }
}

plugins {
    id 'java'
   // id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = 'stable_22'

    makeObfSourceJar = false

    replaceIn 'src/main/java/me/lucko/spark/forge/Forge189SparkMod.java'
    replace "@version@", project.pluginVersion
}

configurations {
    shade
    implementation.extendsFrom shade
}

// https://github.com/MinecraftForge/ForgeGradle/issues/627#issuecomment-533927535
configurations.all {
    resolutionStrategy {
        force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
    }
}

dependencies {
    shade project(':spark-common')
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand (
                'pluginVersion': project.pluginVersion,
                'pluginDescription': project.pluginDescription
        )
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'spark_at.cfg'
    }

    from(provider {
        configurations.shade.collect {
            if (it.isDirectory()) {
                return it
            } else {
                zipTree(it).matching {
                    exclude '**/LICENSE*', 'META-INF/**'
                }
            }
        }
    })

    exclude 'module-info.class'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/proguard/**'
}

/*shadowJar {
    // archiveName = 'spark-forge-189.jar'
    classifier = ''
    configurations = [project.configurations.shade]

    relocate 'okio', 'me.lucko.spark.lib.okio'
    relocate 'okhttp3', 'me.lucko.spark.lib.okhttp3'
    relocate 'net.kyori.adventure', 'me.lucko.spark.lib.adventure'
    relocate 'net.kyori.examination', 'me.lucko.spark.lib.adventure.examination'
    relocate 'net.bytebuddy', 'me.lucko.spark.lib.bytebuddy'
    relocate 'org.tukaani.xz', 'me.lucko.spark.lib.xz'
    relocate 'com.google.protobuf', 'me.lucko.spark.lib.protobuf'
    relocate 'org.objectweb.asm', 'me.lucko.spark.lib.asm'
    relocate 'one.profiler', 'me.lucko.spark.lib.asyncprofiler'
    relocate 'me.lucko.bytesocks.client', 'me.lucko.spark.lib.bytesocks'
    relocate 'com.neovisionaries.ws', 'me.lucko.spark.lib.websockets'

    exclude 'module-info.class'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/proguard/**'
}*/

import net.minecraftforge.gradle.user.TaskSingleReobf
import static net.minecraftforge.gradle.common.Constants.*

/*def shadowReobf = tasks.register("taskShadowReobf", TaskSingleReobf) { task ->
    task.dependsOn shadowJar
    task.setJar(project.getLayout().getBuildDirectory().dir("libs").get().file("spark-forge-189.jar").asFile)

    task.setExceptorCfg(EXC_SRG)
    task.setFieldCsv(CSV_FIELD)
    task.setMethodCsv(CSV_METHOD)
    task.setPrimarySrg(project.getGradle().getGradleUserHomeDir().getAbsolutePath() + "/caches/minecraft/de/oceanlabs/mcp/mcp_stable/22/srgs/mcp-srg.srg")
}*/

/*reobf.reobf(shadowJar) { spec ->
    spec.classpath = sourceSets.main.compileClasspath;
}*/

reobf {
    // shadowJar {}
}

/*artifacts {
    archives shadowJar
    shadow shadowJar
}*/

/*tasks.build.dependsOn reobfShadowJar
jar.finalizedBy('reobfShadowJar')*/
